!function(t){var n={};function e(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:r})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var o in t)e.d(r,o,function(n){return t[n]}.bind(null,o));return r},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=276)}({1:function(t,n,e){(function(n){function e(t){return t&&t.Math==Math&&t}var r="object";t.exports=e(typeof globalThis==r&&globalThis)||e(typeof window==r&&window)||e(typeof self==r&&self)||e(typeof n==r&&n)||Function("return this")()}).call(this,e(19))},109:function(t,n,e){var r=e(1),o=e(81),i=r.WeakMap;t.exports="function"==typeof i&&/native code/.test(o.call(i))},11:function(t,n){var e={}.hasOwnProperty;t.exports=function(t,n){return e.call(t,n)}},12:function(t,n,e){var r=e(9),o=e(16),i=e(35);t.exports=r?function(t,n,e){return o.f(t,n,i(1,e))}:function(t,n,e){return t[n]=e,t}},16:function(t,n,e){var r=e(9),o=e(80),i=e(7),u=e(36),c=Object.defineProperty;n.f=r?c:function(t,n,e){if(i(t),n=u(n,!0),i(e),o)try{return c(t,n,e)}catch(t){}if("get"in e||"set"in e)throw TypeError("Accessors not supported");return"value"in e&&(t[n]=e.value),t}},162:function(t,n,e){var r=e(5),o=e(163);r({global:!0,forced:parseInt!=o},{parseInt:o})},163:function(t,n,e){var r=e(1),o=e(164).trim,i=e(87),u=r.parseInt,c=/^[+-]?0[Xx]/,a=8!==u(i+"08")||22!==u(i+"0x16");t.exports=a?function(t,n){var e=o(String(t));return u(e,n>>>0||(c.test(e)?16:10))}:u},164:function(t,n,e){function r(t){return function(n){var e=String(o(n));return 1&t&&(e=e.replace(u,"")),2&t&&(e=e.replace(c,"")),e}}var o=e(24),i="["+e(87)+"]",u=RegExp("^"+i+i+"*"),c=RegExp(i+i+"*$");t.exports={start:r(1),end:r(2),trim:r(3)}},169:function(t,n,e){"use strict";function r(t){if(-1!==(!t.init&&t.property.indexOf("a:powerState"))){var n=t.data.getSourceEdges();n&&n.forEach((function(n){(void 0!==t.newValue?t.newValue:t.data.getAttr("powerState"))?(n.s("state","1"),n.s("edge.color","#00ff00")):(n.s("state","0"),n.s("edge.color","#ff0000"))}))}}function o(t){if(-1!==(!t.init&&t.property.indexOf("a:switchState"))){var n="0";if(1===(void 0!==t.newValue?t.newValue:t.data.getAttr("switchState"))){var e=t.data.getAttaches();e&&e.forEach((function(t){t.getStyle("state")&&(n="1")}))}t.data.setStyle("state",n)}}function i(t){if(-1!==(!t.init&&t.property.indexOf("s:state"))){var n=t.data.getAttaches();n&&n.forEach((function(n){var e=void 0!==t.newValue?t.newValue:t.data.getStyle("state");n.s("state",e),"0"===e?n.s("shape.border.color","#ff0000"):"1"===e&&n.s("shape.border.color","#00ff00"),n.s("state",e)}))}}e(22),e(54),e(23),n.a=function(t){t instanceof ht.Node&&(void 0!==t.getAttr("powerState")&&r({data:t,init:!0}),void 0!==t.getAttr("switchState")&&o({data:t,init:!0}),void 0!==t.getStyle("state")&&i({data:t,init:!0}),t.onPropertyChanged=function(t){r(t),o(t),i(t)})}},17:function(t,n,e){var r=e(57),o=e(24);t.exports=function(t){return r(o(t))}},19:function(t,n){var e;e=function(){return this}();try{e=e||new Function("return this")()}catch(t){"object"==typeof window&&(e=window)}t.exports=e},2:function(t,n,e){var r=e(1),o=e(31),i=e(58),u=e(91),c=r.Symbol,a=o("wks");t.exports=function(t){return a[t]||(a[t]=u&&c[t]||(u?c:i)("Symbol."+t))}},20:function(t,n,e){var r=e(1),o=e(31),i=e(12),u=e(11),c=e(43),a=e(81),f=e(38),s=f.get,l=f.enforce,p=String(a).split("toString");o("inspectSource",(function(t){return a.call(t)})),(t.exports=function(t,n,e,o){var a=!!o&&!!o.unsafe,f=!!o&&!!o.enumerable,s=!!o&&!!o.noTargetGet;"function"==typeof e&&("string"!=typeof n||u(e,"name")||i(e,"name",n),l(e).source=p.join("string"==typeof n?n:"")),t!==r?(a?!s&&t[n]&&(f=!0):delete t[n],f?t[n]=e:i(t,n,e)):f?t[n]=e:c(n,e)})(Function.prototype,"toString",(function(){return"function"==typeof this&&s(this).source||a.call(this)}))},21:function(t,n,e){var r=e(32),o=Math.min;t.exports=function(t){return 0<t?o(r(t),9007199254740991):0}},22:function(t,n,e){"use strict";var r=e(5),o=e(86);r({target:"Array",proto:!0,forced:[].forEach!=o},{forEach:o})},23:function(t,n,e){var r=e(1),o=e(93),i=e(86),u=e(12);for(var c in o){var a=r[c],f=a&&a.prototype;if(f&&f.forEach!==i)try{u(f,"forEach",i)}catch(t){f.forEach=i}}},24:function(t,n){t.exports=function(t){if(null==t)throw TypeError("Can't call method on "+t);return t}},25:function(t,n){var e={}.toString;t.exports=function(t){return e.call(t).slice(8,-1)}},26:function(t,n,e){var r=e(24);t.exports=function(t){return Object(r(t))}},276:function(t,n,e){"use strict";e.r(n),e(162);var r=e(169);setTimeout((function(){!function(){document.body.oncontextmenu=function(t){var n=document.getElementById("rightMenu");t.preventDefault();var e=t.clientX,r=t.clientY,o=parseInt(n.style.width);toolbar=function(t){var n=new ht.widget.Toolbar([{label:"背景色",unfocusable:!0,colorPicker:{width:130,instant:void 0,onValueChanged:function(){n.setLabelColor(this.getValue()),document.body.style.background=this.getValue()}}}]);return n}(),toolbar.setStickToRight(!0);var i=toolbar.getView();i.className="main",n.appendChild(i),e+o<document.documentElement.clientWidth?n.style.left=e+"px":n.style.right=e+"px",n.style.top=r+"px",n.style.display="block"};var t=new ht.DataModel,n=new ht.graph.GraphView(t);n.addToDOM(),n.deserialize("previews/display.json"),n.getView().style.zIndex=1,n.fitContent(!0),n.addInteractorListener((function(t){"clickBackground"===t.kind&&(document.getElementById("rightMenu").style.display="none")})),t.addDataModelChangeListener((function(t){console.log("Add data model change",t);var n=t.data;Object(r.a)(n)}))}()}),1e3)},30:function(t,n,e){var r=e(9),o=e(62),i=e(35),u=e(17),c=e(36),a=e(11),f=e(80),s=Object.getOwnPropertyDescriptor;n.f=r?s:function(t,n){if(t=u(t),n=c(n,!0),f)try{return s(t,n)}catch(t){}if(a(t,n))return i(!o.f.call(t,n),t[n])}},31:function(t,n,e){var r=e(1),o=e(43),i=e(37),u="__core-js_shared__",c=r[u]||o(u,{});(t.exports=function(t,n){return c[t]||(c[t]=void 0!==n?n:{})})("versions",[]).push({version:"3.2.1",mode:i?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},32:function(t,n){var e=Math.ceil,r=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(0<t?r:e)(t)}},35:function(t,n){t.exports=function(t,n){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:n}}},36:function(t,n,e){var r=e(8);t.exports=function(t,n){if(!r(t))return t;var e,o;if(n&&"function"==typeof(e=t.toString)&&!r(o=e.call(t)))return o;if("function"==typeof(e=t.valueOf)&&!r(o=e.call(t)))return o;if(!n&&"function"==typeof(e=t.toString)&&!r(o=e.call(t)))return o;throw TypeError("Can't convert object to primitive value")}},37:function(t,n){t.exports=!1},38:function(t,n,e){var r,o,i,u=e(109),c=e(1),a=e(8),f=e(12),s=e(11),l=e(44),p=e(41),d=c.WeakMap;if(u){var v=new d,y=v.get,h=v.has,g=v.set;r=function(t,n){return g.call(v,t,n),n},o=function(t){return y.call(v,t)||{}},i=function(t){return h.call(v,t)}}else{var x=l("state");p[x]=!0,r=function(t,n){return f(t,x,n),n},o=function(t){return s(t,x)?t[x]:{}},i=function(t){return s(t,x)}}t.exports={set:r,get:o,has:i,enforce:function(t){return i(t)?o(t):r(t,{})},getterFor:function(t){return function(n){var e;if(!a(n)||(e=o(n)).type!==t)throw TypeError("Incompatible receiver, "+t+" required");return e}}}},4:function(t,n){t.exports=function(t){try{return!!t()}catch(t){return!0}}},41:function(t,n){t.exports={}},43:function(t,n,e){var r=e(1),o=e(12);t.exports=function(t,n){try{o(r,t,n)}catch(e){r[t]=n}return n}},44:function(t,n,e){var r=e(31),o=e(58),i=r("keys");t.exports=function(t){return i[t]||(i[t]=o(t))}},45:function(t,n,e){function r(t){return"function"==typeof t?t:void 0}var o=e(64),i=e(1);t.exports=function(t,n){return arguments.length<2?r(o[t])||r(i[t]):o[t]&&o[t][n]||i[t]&&i[t][n]}},46:function(t,n,e){var r=e(90),o=e(65).concat("length","prototype");n.f=Object.getOwnPropertyNames||function(t){return r(t,o)}},47:function(t,n,e){var r=e(25);t.exports=Array.isArray||function(t){return"Array"==r(t)}},48:function(t,n,e){function r(t){var n=1==t,e=2==t,r=3==t,s=4==t,l=6==t,p=5==t||l;return function(d,v,y,h){for(var g,x,b=u(d),m=i(b),S=o(v,y,3),w=c(m.length),O=0,L=h||a,E=n?L(d,w):e?L(d,0):void 0;O<w;O++)if((p||O in m)&&(x=S(g=m[O],O,b),t))if(n)E[O]=x;else if(x)switch(t){case 3:return!0;case 5:return g;case 6:return O;case 2:f.call(E,g)}else if(s)return!1;return l?-1:r||s?s:E}}var o=e(68),i=e(57),u=e(26),c=e(21),a=e(85),f=[].push;t.exports={forEach:r(0),map:r(1),filter:r(2),some:r(3),every:r(4),find:r(5),findIndex:r(6)}},49:function(t,n){t.exports=function(t){if("function"!=typeof t)throw TypeError(String(t)+" is not a function");return t}},5:function(t,n,e){var r=e(1),o=e(30).f,i=e(12),u=e(20),c=e(43),a=e(88),f=e(67);t.exports=function(t,n){var e,s,l,p,d,v=t.target,y=t.global,h=t.stat;if(e=y?r:h?r[v]||c(v,{}):(r[v]||{}).prototype)for(s in n){if(p=n[s],l=t.noTargetGet?(d=o(e,s))&&d.value:e[s],!f(y?s:v+(h?".":"#")+s,t.forced)&&void 0!==l){if(typeof p==typeof l)continue;a(p,l)}(t.sham||l&&l.sham)&&i(p,"sham",!0),u(e,s,p,t)}}},54:function(t,n,e){"use strict";var r=e(5),o=e(82).indexOf,i=e(60),u=[].indexOf,c=!!u&&1/[1].indexOf(1,-0)<0,a=i("indexOf");r({target:"Array",proto:!0,forced:c||a},{indexOf:function(t,n){return c?u.apply(this,arguments)||0:o(this,t,1<arguments.length?n:void 0)}})},57:function(t,n,e){var r=e(4),o=e(25),i="".split;t.exports=r((function(){return!Object("z").propertyIsEnumerable(0)}))?function(t){return"String"==o(t)?i.call(t,""):Object(t)}:Object},58:function(t,n){var e=0,r=Math.random();t.exports=function(t){return"Symbol("+String(void 0===t?"":t)+")_"+(++e+r).toString(36)}},60:function(t,n,e){"use strict";var r=e(4);t.exports=function(t,n){var e=[][t];return!e||!r((function(){e.call(null,n||function(){throw 1},1)}))}},62:function(t,n,e){"use strict";var r={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,i=o&&!r.call({1:2},1);n.f=i?function(t){var n=o(this,t);return!!n&&n.enumerable}:r},63:function(t,n,e){var r=e(1),o=e(8),i=r.document,u=o(i)&&o(i.createElement);t.exports=function(t){return u?i.createElement(t):{}}},64:function(t,n,e){t.exports=e(1)},65:function(t,n){t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},66:function(t,n){n.f=Object.getOwnPropertySymbols},67:function(t,n,e){function r(t,n){var e=c[u(t)];return e==f||e!=a&&("function"==typeof n?o(n):!!n)}var o=e(4),i=/#|\.prototype\./,u=r.normalize=function(t){return String(t).replace(i,".").toLowerCase()},c=r.data={},a=r.NATIVE="N",f=r.POLYFILL="P";t.exports=r},68:function(t,n,e){var r=e(49);t.exports=function(t,n,e){if(r(t),void 0===n)return t;switch(e){case 0:return function(){return t.call(n)};case 1:return function(e){return t.call(n,e)};case 2:return function(e,r){return t.call(n,e,r)};case 3:return function(e,r,o){return t.call(n,e,r,o)}}return function(){return t.apply(n,arguments)}}},7:function(t,n,e){var r=e(8);t.exports=function(t){if(!r(t))throw TypeError(String(t)+" is not an object");return t}},8:function(t,n){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},80:function(t,n,e){var r=e(9),o=e(4),i=e(63);t.exports=!r&&!o((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},81:function(t,n,e){var r=e(31);t.exports=r("native-function-to-string",Function.toString)},82:function(t,n,e){function r(t){return function(n,e,r){var c,a=o(n),f=i(a.length),s=u(r,f);if(t&&e!=e){for(;s<f;)if((c=a[s++])!=c)return!0}else for(;s<f;s++)if((t||s in a)&&a[s]===e)return t||s||0;return!t&&-1}}var o=e(17),i=e(21),u=e(83);t.exports={includes:r(!0),indexOf:r(!1)}},83:function(t,n,e){var r=e(32),o=Math.max,i=Math.min;t.exports=function(t,n){var e=r(t);return e<0?o(e+n,0):i(e,n)}},85:function(t,n,e){var r=e(8),o=e(47),i=e(2)("species");t.exports=function(t,n){var e;return o(t)&&("function"!=typeof(e=t.constructor)||e!==Array&&!o(e.prototype)?r(e)&&null===(e=e[i])&&(e=void 0):e=void 0),new(void 0===e?Array:e)(0===n?0:n)}},86:function(t,n,e){"use strict";var r=e(48).forEach,o=e(60);t.exports=o("forEach")?function(t,n){return r(this,t,1<arguments.length?n:void 0)}:[].forEach},87:function(t,n){t.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},88:function(t,n,e){var r=e(11),o=e(89),i=e(30),u=e(16);t.exports=function(t,n){for(var e=o(n),c=u.f,a=i.f,f=0;f<e.length;f++){var s=e[f];r(t,s)||c(t,s,a(n,s))}}},89:function(t,n,e){var r=e(45),o=e(46),i=e(66),u=e(7);t.exports=r("Reflect","ownKeys")||function(t){var n=o.f(u(t)),e=i.f;return e?n.concat(e(t)):n}},9:function(t,n,e){var r=e(4);t.exports=!r((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},90:function(t,n,e){var r=e(11),o=e(17),i=e(82).indexOf,u=e(41);t.exports=function(t,n){var e,c=o(t),a=0,f=[];for(e in c)!r(u,e)&&r(c,e)&&f.push(e);for(;n.length>a;)r(c,e=n[a++])&&(~i(f,e)||f.push(e));return f}},91:function(t,n,e){var r=e(4);t.exports=!!Object.getOwnPropertySymbols&&!r((function(){return!String(Symbol())}))},93:function(t,n){t.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,